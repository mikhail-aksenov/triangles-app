<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="10.0" Name="My FxCop Project">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">$(FxCopDir)\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded, Good, Noise" NewOnly="False" />
   <Report Status="Active, Good, Noise" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <AssemblyReferenceDirectories>
   <Directory>$(ProjectDir)/../triangles-app/bin/Debug/</Directory>
   <Directory>$(ProjectDir)/../triangles-app/bin/Debug/</Directory>
  </AssemblyReferenceDirectories>
  <Target Name="$(ProjectDir)/../triangles-app/bin/Release/triangles-app.exe" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityTransparencyRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="10.0">
  <Targets>
   <Target Name="$(ProjectDir)/../triangles-app/bin/Release/triangles-app.exe">
    <Modules>
     <Module Name="triangles-app.exe">
      <Messages>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Created="2014-09-22 16:03:01Z">
        <Issue Name="NoStrongName">
         <Item>'triangles-app.exe'</Item>
        </Issue>
       </Message>
       <Message Id="triangles-app" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2014-09-22 16:03:01Z">
        <Issue Name="Assembly">
         <Item>triangles-app</Item>
         <Item>'triangles-app.exe'</Item>
         <Item>Triangles-app</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Created="2014-09-22 16:03:01Z">
        <Issue>
         <Item>'triangles-app.exe'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="TrianglesApp">
        <Types>
         <Type Name="Program">
          <Members>
           <Member Name="#InvokeClassical(System.IO.StreamReader,System.IO.StreamWriter)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-09-22 16:03:01Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'Program.InvokeClassical(StreamReader, StreamWriter)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="TrianglesApp.Classical">
        <Types>
         <Type Name="Triangle">
          <Members>
           <Member Name="#.ctor(System.Double,System.Double,System.Double)">
            <Messages>
             <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'Triangle.Triangle(double, double, double)'</Item>
               <Item>'a'</Item>
              </Issue>
             </Message>
             <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'Triangle.Triangle(double, double, double)'</Item>
               <Item>'b'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#A">
            <Messages>
             <Message Id="A" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberMoreMeaningfulName">
               <Item>'Triangle.A'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#B">
            <Messages>
             <Message Id="B" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberMoreMeaningfulName">
               <Item>'Triangle.B'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#C">
            <Messages>
             <Message Id="C" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberMoreMeaningfulName">
               <Item>'Triangle.C'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ComputeAngle(System.Double,System.Double,System.Double)">
            <Messages>
             <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'Triangle.ComputeAngle(double, double, double)'</Item>
               <Item>'a'</Item>
              </Issue>
             </Message>
             <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'Triangle.ComputeAngle(double, double, double)'</Item>
               <Item>'b'</Item>
              </Issue>
             </Message>
             <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'Triangle.ComputeAngle(double, double, double)'</Item>
               <Item>'c'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ComputeSide(System.Double,System.Double,System.Double)">
            <Messages>
             <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'Triangle.ComputeSide(double, double, double)'</Item>
               <Item>'a'</Item>
              </Issue>
             </Message>
             <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'Triangle.ComputeSide(double, double, double)'</Item>
               <Item>'b'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ValidateAngle(System.Double)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2014-09-22 16:03:01Z">
              <Issue Name="IncorrectParameterName">
               <Item>'Triangle.ValidateAngle(double)'</Item>
               <Item>Alpha</Item>
               <Item>'paramName'</Item>
               <Item>'ArgumentOutOfRangeException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Util">
          <Messages>
           <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
            <Issue Name="Type">
             <Item>Util</Item>
             <Item>'Util'</Item>
            </Issue>
           </Message>
           <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Created="2014-09-22 16:03:01Z">
            <Issue Name="System">
             <Item>'Util'</Item>
             <Item>System.Web.Util</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#DATA_SIZE">
            <Messages>
             <Message Id="DATA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2014-09-22 16:03:01Z">
              <Issue Name="Member">
               <Item>DATA</Item>
               <Item>'Util.DATA_SIZE'</Item>
               <Item>Data</Item>
              </Issue>
             </Message>
             <Message Id="SIZE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2014-09-22 16:03:01Z">
              <Issue Name="Member">
               <Item>SIZE</Item>
               <Item>'Util.DATA_SIZE'</Item>
               <Item>Size</Item>
              </Issue>
             </Message>
             <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Created="2014-09-22 16:03:01Z">
              <Issue Name="Member">
               <Item>'Util.DATA_SIZE'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#DegToRad(System.Double)">
            <Messages>
             <Message Id="Rad" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="Member">
               <Item>Rad</Item>
               <Item>'Util.DegToRad(double)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ParseRow(System.String,System.Int64)">
            <Messages>
             <Message Id="idx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="MemberParameter">
               <Item>'Util.ParseRow(string, long)'</Item>
               <Item>idx</Item>
               <Item>'idx'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-09-22 16:03:01Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Util.ParseRow(string, long)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Util.ParseRow(string, long)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RadToDeg(System.Double)">
            <Messages>
             <Message Id="Rad" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-09-22 16:03:01Z">
              <Issue Name="Member">
               <Item>Rad</Item>
               <Item>'Util.RadToDeg(double)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
    <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
    <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
    <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberMoreMeaningfulName">Consider providing a more meaningful name than member name {0}.</Resolution>
    <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
    <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
    <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   </Rule>
   <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
    <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   </Rule>
   <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
    <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   </Rule>
   <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
    <Resolution Name="System">The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
